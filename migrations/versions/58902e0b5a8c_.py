"""empty message

Revision ID: 58902e0b5a8c
Revises: 
Create Date: 2024-02-10 17:24:27.066996

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '58902e0b5a8c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Shares', schema=None) as batch_op:
        batch_op.drop_index('ix_Shares_level_0')

    op.drop_table('Shares')
    with op.batch_alter_table('InstitutionalHolders', schema=None) as batch_op:
        batch_op.drop_index('ix_InstitutionalHolders_level_0')

    op.drop_table('InstitutionalHolders')
    op.drop_table('usersstocks')
    op.drop_table('userstransactions')
    with op.batch_alter_table('BalSheet', schema=None) as batch_op:
        batch_op.drop_index('ix_BalSheet_level_0')

    op.drop_table('BalSheet')
    with op.batch_alter_table('IncStmt', schema=None) as batch_op:
        batch_op.drop_index('ix_IncStmt_level_0')

    op.drop_table('IncStmt')
    with op.batch_alter_table('History', schema=None) as batch_op:
        batch_op.drop_index('ix_History_index')

    op.drop_table('History')
    with op.batch_alter_table('Metadata', schema=None) as batch_op:
        batch_op.drop_index('ix_Metadata_index')

    op.drop_table('Metadata')
    with op.batch_alter_table('CashFlowStmt', schema=None) as batch_op:
        batch_op.drop_index('ix_CashFlowStmt_level_0')

    op.drop_table('CashFlowStmt')
    with op.batch_alter_table('MajorHolders', schema=None) as batch_op:
        batch_op.drop_index('ix_MajorHolders_level_0')

    op.drop_table('MajorHolders')
    op.drop_table('users')
    with op.batch_alter_table('Actions', schema=None) as batch_op:
        batch_op.drop_index('ix_Actions_index')

    op.drop_table('Actions')
    with op.batch_alter_table('MutualFundHolders', schema=None) as batch_op:
        batch_op.drop_index('ix_MutualFundHolders_level_0')

    op.drop_table('MutualFundHolders')
    
    with op.batch_alter_table('user', schema=None) as batch_op:
        op.add_column('user', sa.Column('dt1', sa.String(length=5), nullable=False, server_default='MSFT'))
        op.add_column('user', sa.Column('dt2', sa.String(length=5), nullable=False, server_default='APPL'))
        op.add_column('user', sa.Column('dt3', sa.String(length=5), nullable=False, server_default='TSLA'))
        op.add_column('user', sa.Column('dt4', sa.String(length=5), nullable=False, server_default='GOOGL'))


    # ### end Alembic commands ###


def downgrade():

    op.create_table('MutualFundHolders',
    sa.Column('level_0', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('index', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Holder', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Shares', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Date Reported', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('% Out', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Value', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ticker', sa.TEXT(), autoincrement=False, nullable=True)
    )
    with op.batch_alter_table('MutualFundHolders', schema=None) as batch_op:
        batch_op.create_index('ix_MutualFundHolders_level_0', ['level_0'], unique=False)

    op.create_table('Actions',
    sa.Column('index', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('Dividends', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Stock Splits', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ticker', sa.TEXT(), autoincrement=False, nullable=True)
    )
    with op.batch_alter_table('Actions', schema=None) as batch_op:
        batch_op.create_index('ix_Actions_index', ['index'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('balance', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_table('MajorHolders',
    sa.Column('level_0', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('index', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('0', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ticker', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Holder', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Shares', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Date Reported', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('% Out', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    with op.batch_alter_table('MajorHolders', schema=None) as batch_op:
        batch_op.create_index('ix_MajorHolders_level_0', ['level_0'], unique=False)

    op.create_table('CashFlowStmt',
    sa.Column('level_0', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('index', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ticker', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('Value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    with op.batch_alter_table('CashFlowStmt', schema=None) as batch_op:
        batch_op.create_index('ix_CashFlowStmt_level_0', ['level_0'], unique=False)

    op.create_table('Metadata',
    sa.Column('index', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('currency', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('symbol', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('exchangeName', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('instrumentType', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('firstTradeDate', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('regularMarketTime', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('gmtoffset', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('timezone', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('exchangeTimezoneName', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('regularMarketPrice', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('chartPreviousClose', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('priceHint', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('dataGranularity', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('range', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('validRanges', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('currentTradingPeriod.pre.timezone', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('currentTradingPeriod.pre.start', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('currentTradingPeriod.pre.end', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('currentTradingPeriod.pre.gmtoffset', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('currentTradingPeriod.regular.timezone', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('currentTradingPeriod.regular.start', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('currentTradingPeriod.regular.end', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('currentTradingPeriod.regular.gmtoffset', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('currentTradingPeriod.post.timezone', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('currentTradingPeriod.post.start', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('currentTradingPeriod.post.end', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('currentTradingPeriod.post.gmtoffset', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ticker', sa.TEXT(), autoincrement=False, nullable=True)
    )
    with op.batch_alter_table('Metadata', schema=None) as batch_op:
        batch_op.create_index('ix_Metadata_index', ['index'], unique=False)

    op.create_table('History',
    sa.Column('index', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('Open', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('High', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Low', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Close', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Adj Close', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Volume', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ticker', sa.TEXT(), autoincrement=False, nullable=True)
    )
    with op.batch_alter_table('History', schema=None) as batch_op:
        batch_op.create_index('ix_History_index', ['index'], unique=False)

    op.create_table('IncStmt',
    sa.Column('level_0', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('index', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ticker', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('Value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    with op.batch_alter_table('IncStmt', schema=None) as batch_op:
        batch_op.create_index('ix_IncStmt_level_0', ['level_0'], unique=False)

    op.create_table('BalSheet',
    sa.Column('level_0', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('index', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ticker', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('Value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    with op.batch_alter_table('BalSheet', schema=None) as batch_op:
        batch_op.create_index('ix_BalSheet_level_0', ['level_0'], unique=False)

    op.create_table('userstransactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('userid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('ticker', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('numshares', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='userstransactions_pkey')
    )
    op.create_table('usersstocks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('userid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ticker', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('numshares', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='usersstocks_pkey')
    )
    op.create_table('InstitutionalHolders',
    sa.Column('level_0', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('index', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Holder', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Shares', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('Date Reported', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('% Out', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Value', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ticker', sa.TEXT(), autoincrement=False, nullable=True)
    )
    with op.batch_alter_table('InstitutionalHolders', schema=None) as batch_op:
        batch_op.create_index('ix_InstitutionalHolders_level_0', ['level_0'], unique=False)

    op.create_table('Shares',
    sa.Column('level_0', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('index', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('Shares', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ticker', sa.TEXT(), autoincrement=False, nullable=True)
    )
    with op.batch_alter_table('Shares', schema=None) as batch_op:
        batch_op.create_index('ix_Shares_level_0', ['level_0'], unique=False)

    # ### end Alembic commands ###
